/*
 * File: app/view/MainViewViewController.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('byzCorp.view.MainViewViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mainview',

    onStajIslemleriClick: function(item, e, eOpts) {
        var refs = this.getReferences();
        Ext.Ajax.request({
            url:'/byzCorp/lookUp/getLookUpDetail',
            params : {
                lookUpDetailId : 28//lud.parametreler.Bir dönem için belirlenen staj süresi
            },
            success : function(res){debugger;
                var api = Ext.decode(res.responseText);
                if(api.length>0){
                    refs.txtInternShipDay.setValue(api[0].LOOKUPDETAILVALUE);

                }
            }
        });
    },

    onStudentGridRowClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var data = record.data;
        refs.txtStudentId.setValue(data.STUDENTID);
        refs.txtStudentNo.setValue(data.STUDENTNO);
        refs.txtStudentFirstName.setValue(data.STUDENTFIRSTNAME);
        refs.txtStudentLastName.setValue(data.STUDENTLASTNAME);
        refs.txtStudentCountryId.setValue(data.STUDENTCOUNTRYID);
        refs.cmbStudentPeriod.setValue(data.STUDENTPERIODID);
        refs.cmbStudentClass.setValue(data.STUDENTCLASSID);
        refs.cmbStudentStatu.setValue(data.STUDENTSTATUSID);
        refs.cmbStudentDepartment.setValue(data.STUDENTDEPARTMENTID);
    },

    onStudentListPdfClick: function(item, e, eOpts) {
        var refs = this.getReferences();
        document.location = '/byzCorp/student/studentPDF?txtValue='+refs.txtSearch.getValue();
    },

    onCmbStudentStatuKeyup: function(textfield, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var txtValue = textfield.value;
        if(e.keyCode == e.ENTER){
            refs.studentsGrid.getStore().load({
                params:{
                    txtValue : txtValue
                }
            });
        }
    },

    onSaveOrUpdateStudentClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        Ext.Ajax.request({
            url:'/byzCorp/student/saveOrUpdateStudent',
            params : {
                data : Ext.encode(refs.saveStudentForm.getForm().getValues())
            },
            success : function(res){debugger;
                var api = Ext.decode(res.responseText);
                if(api.success){
                    refs.studentsGrid.getStore().load();
                    refs.saveStudentForm.getForm().reset();

                    var t = new Ext.ToolTip({
                        anchor: 'top',
                        anchorToTarget: false,
                        targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                        title: 'Uyarı',
                        html: '0000-Kayıt işlemi başarılı.',
                        hideDelay: 200,
                        closable: false
                    });
                    t.show();
                }else{
                    Ext.Msg.alert('Uyarı', 'Kayıt işlemi gerçekleşmedi.');
                }
            }
        });
    },

    onStudentFormResetClick: function(button, e, eOpts) {
        var refs = this.getReferences();
        refs.saveStudentForm.getForm().reset();
    },

    onDateStartInternShipSelect: function(field, value, eOpts) {
        debugger;
        var refs = this.getReferences();
        var addDate = refs.txtInternShipDay.getValue();
        refs.dateEndInternShip.setValue(Ext.Date.add(value, Ext.Date.DAY, addDate));
    },

    onSaveOrUpdateInternShipFormClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var userId = refs.lblUserId.text;
        if(refs.cmbInternShipStudent.getValue()===null){
            refs.cmbInternShipStudent.setFieldStyle('background:#ffbba8');
        }else if(refs.cmbInternShipPlace.getValue()===null){
            refs.cmbInternShipPlace.setFieldStyle('background:#ffbba8');
        }else if(refs.cmbInternShipType.getValue()===null){
            refs.cmbInternShipType.setFieldStyle('background:#ffbba8');
        }else if(refs.cmbInternShipPeriod.getValue()===null){
            refs.cmbInternShipPeriod.setFieldStyle('background:#ffbba8');
        }else if(refs.cmbInternShipAcceptStatus.getValue()===null){
            refs.cmbInternShipAcceptStatus.setFieldStyle('background:#ffbba8');
        }else{
            Ext.Ajax.request({
                url:'/byzCorp/internShip/saveOrUpdateInternShip',
                params : {
                    data : Ext.encode(refs.saveInternShipForm.getForm().getValues()),
                    userId : userId
                },
                success : function(res){debugger;
                    var api = Ext.decode(res.responseText);
                    if(api.success){
                        refs.internShipsGrid.getStore().load();
                        refs.saveInternShipForm.getForm().reset();
                        var t = new Ext.ToolTip({
                            anchor: 'top',
                            anchorToTarget: false,
                            targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                            title: 'Uyarı',
                            html: '0000-Kayıt işlemi başarılı.',
                            hideDelay: 200,
                            closable: false
                        });
                        t.show();
                    }else{
                        Ext.Msg.alert(api.data.localizedMessage, api.data.SQLState);
                    }
                }
            });
        }
    },

    onFormInternShipFormResetClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        refs.saveInternShipForm.getForm().reset();
        Ext.Ajax.request({
            url:'/byzCorp/lookUp/getLookUpDetail',
            params : {
                lookUpDetailId : 28//lud.parametreler.Bir dönem için belirlenen staj süresi
            },
            success : function(res){debugger;
                var api = Ext.decode(res.responseText);
                if(api.length>0){
                    refs.txtInternShipDay.setValue(api[0].LOOKUPDETAILVALUE);

                }
            }
        });
    },

    onDeleteInternShipClick: function(button, e, eOpts) {

        debugger;
        var refs = this.getReferences();

        var record = refs.internShipsGrid.getSelectionModel();
        if(!record.hasSelection()){
            Ext.Msg.alert('Uyarı', 'Lütfen önce listeden öğrenci seçiniz..');
        }else{
            Ext.Ajax.request({
                url:'/byzCorp/internShip/getInternShipDetailsCount',
                params : {
                    internShipId : record.getSelected().items[0].data.INTERNSHIPID
                },
                success : function(res){debugger;
                    var api = Ext.decode(res.responseText);
                    if(api[0].TOTALINTERNSHIPDETAILCOMPDAY>0){

                        Ext.Msg.show({
                            title : 'Dikkat',
                            msg : 'Silmek istediğiniz kaydın detay kayıtları bulunmaktadır. Detay kayıtları ile birlikte kaydı silmek istedinize emin misiniz? ',
                            width : 450,
                            closable : false,
                            buttons : Ext.Msg.YESNO,
                            icon : Ext.Msg.QUESTION,
                            buttonText :
                            {
                                yes : 'Evet',
                                no : 'Hayır',
                                cancel : 'İptal'
                            },
                            multiline : false,
                            fn : function(buttonValue, inputText, showConfig){debugger;
                                if(buttonValue==='yes'){
                                    Ext.Ajax.request({
                                        url:'/byzCorp/internShip/deleteInternShip',
                                        params : {
                                            internShipId : record.getSelected().items[0].data.INTERNSHIPID
                                        },
                                        success : function(res){debugger;
                                            var api = Ext.decode(res.responseText);
                                            if(api.success){
                                                refs.internShipsGrid.getStore().load();
                                                refs.internShipDetailGrid.getStore().load();
                                                refs.saveInternShipForm.getForm().reset();
                                                var t = new Ext.ToolTip({
                                                    anchor: 'top',
                                                    anchorToTarget: false,
                                                    targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                                                    title: 'Uyarı',
                                                    html: '0000-Silme işlemi başarılı.',
                                                    hideDelay: 200,
                                                    closable: false
                                                });
                                                t.show();
                                            }else{
                                                Ext.Msg.alert('Uyarı', 'Silme işlemi gerçekleşmedi.');
                                            }
                                        }
                                    });

                                }else if(buttonValue==='no'){debugger;
                                    Ext.Msg.alert('Uyarı', 'Silme işleminiz iptal edildi.');
                                }else{
                                    Ext.Msg.alert('Uyarı', 'İşleminiz iptal edildi.');
                                }

                            }
                        });

                    }else{
                        Ext.Ajax.request({
                            url:'/byzCorp/internShip/deleteInternShip',
                            params : {
                                internShipId : record.getSelected().items[0].data.INTERNSHIPID
                            },
                            success : function(res){debugger;
                                var api = Ext.decode(res.responseText);
                                if(api.success){
                                    refs.internShipsGrid.getStore().load();
                                    refs.saveInternShipForm.getForm().reset();
                                    var t = new Ext.ToolTip({
                                        anchor: 'top',
                                        anchorToTarget: false,
                                        targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                                        title: 'Uyarı',
                                        html: '0000-Silme işlemi başarılı.',
                                        hideDelay: 200,
                                        closable: false
                                    });
                                    t.show();
                                }else{
                                    Ext.Msg.alert('Uyarı', 'Silme işlemi gerçekleşmedi.');
                                }
                            }
                        });
                    }
                }
            });

        }
    },

    onInternShipGridRowClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var data = record.data;
        refs.txtInternShipId.setValue(data.INTERNSHIPID);
        refs.cmbInternShipStudent.setValue(data.INTERNSHIPSTUDENTID);
        refs.dateStartInternShip.setRawValue(data.INTERNSHIPSTARTDATE);
        refs.dateEndInternShip.setRawValue(data.INTERNSHIPENDDATE);
        refs.cmbInternShipPeriod.setValue(data.INTERNSHIPPERIODID);
        refs.cmbInternShipType.setValue(data.INTERNSHIPTYPEID);
        refs.txtInternShipDay.setValue(data.INTERNSHIPDAY);
        refs.cmbInternShipPlace.setValue(data.INTERNSHIPPLACEID);
        refs.txtInternShipDesc.setValue(data.INTERNSHIPDESC);
        var internShipDetailFormPanel = refs.internShipDetailFormPanel;
        internShipDetailFormPanel.setCollapsed(false);

        refs.internShipDetailGrid.getStore().load({
            params:{
                internShipId : record.data.INTERNSHIPID
            }
        });
    },

    onInternShipListPdfClick1: function(item, e, eOpts) {
        var refs = this.getReferences();
        document.location = '/byzCorp/internShip/internShipPDF?txtValue='+refs.txtSearch.getValue();
    },

    onSaveOrUpdateInternShipDetailClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        if(refs.internShipsGrid.getSelection().length>0){
            Ext.Ajax.request({
                url:'/byzCorp/internShip/saveOrUpdateInternShipsDetail',
                params : {
                    data : Ext.encode(refs.saveOrUpdateInternShipDetailForm.getForm().getValues()),
                    selected : Ext.encode(refs.internShipsGrid.getSelection()[0].data)
                },
                success : function(res){debugger;
                    var api = Ext.decode(res.responseText);
                    if(api.success){
                        refs.internShipDetailGrid.getStore().load();
                        refs.internShipsGrid.getStore().load();
                        refs.saveOrUpdateInternShipDetailForm.getForm().reset();
                        var t = new Ext.ToolTip({
                            anchor: 'top',
                            anchorToTarget: false,
                            targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                            title: 'Uyarı',
                            html: '0000-Kayıt işlemi başarılı.',
                            hideDelay: 200,
                            closable: false
                        });
                        t.show();
                    }else{
                        Ext.Msg.alert(api.data.localizedMessage, api.data.SQLState);
                    }
                }
            });

        }else{
            Ext.Msg.alert('Uyarı', 'Öncelikle staj bilgileri listesinden bir kayıt seçmelisiniz.');
        }
    },

    onInternShipDetailFormResetClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        refs.saveOrUpdateInternShipDetailForm.getForm().reset();
    },

    onDeleteInternShipDetailClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var record = refs.internShipDetailGrid.getSelectionModel();
        if(!record.hasSelection()){
            Ext.Msg.alert('Uyarı', 'Lütfen önce listeden kayit seçiniz..');
        }else{
            Ext.Ajax.request({
                url:'/byzCorp/internShip/deleteInternShipDetail',
                params : {
                    internShipDetailId : record.getSelected().items[0].data.INTERNSHIPDETAILID
                },
                success : function(res){debugger;
                    var api = Ext.decode(res.responseText);
                    if(api.success){
                        refs.internShipDetailGrid.getStore().load();
                        refs.internShipsGrid.getStore().load();
                        refs.saveOrUpdateInternShipDetailForm.getForm().reset();
                        var t = new Ext.ToolTip({
                            anchor: 'top',
                            anchorToTarget: false,
                            targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                            title: 'Uyarı',
                            html: '0000-Silme işlemi başarılı.',
                            hideDelay: 200,
                            closable: false
                        });
                        t.show();
                    }else{
                        Ext.Msg.alert('Uyarı', 'Kayıt işlemi gerçekleşmedi.');
                    }
                }
            });
        }
    },

    onUserGridRowClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var data = record.data;
        refs.txtUserId.setValue(data.USERID);
        refs.txtUserFirstName.setValue(data.USERFIRSTNAME);
        refs.txtUserLastName.setValue(data.USERLASTNAME);
        refs.txtUserName.setValue(data.USERNAME);
        refs.txtUserEmail.setValue(data.USEREMAIL);
        refs.cmbUserTitle.setValue(data.USERTITLEID);
        refs.cmbUserRole.setValue(data.USERROLEID);
        refs.cmbUserStatus.setValue(data.USERSTATUS);
    },

    onUserPdfClick: function(item, e, eOpts) {
        var refs = this.getReferences();
        document.location = '/byzCorp/user/userPDF?txtValue='+refs.txtSearch.getValue();
    },

    onSaveOrUpdateUserClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        Ext.Ajax.request({
            url:'/byzCorp/user/saveOrUpdateUser',
            params : {
                data : Ext.encode(refs.kullaniciKayitForm.getForm().getValues())
            },
            success : function(res){debugger;
                var api = Ext.decode(res.responseText);
                if(api.success){
                    refs.usersGrid.getStore().load();
                    refs.kullaniciKayitForm.getForm().reset();
                    var t = new Ext.ToolTip({
                        anchor: 'top',
                        anchorToTarget: false,
                        targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                        title: 'Uyarı',
                        html: '0000-Kayıt işlemi başarılı.',
                        hideDelay: 200,
                        closable: false
                    });
                    t.show();
                }else{
                    Ext.Msg.alert('Uyarı', 'Kayıt işlemi gerçekleşmedi.');
                }
            }
        });
    },

    onUserFormResetClick: function(button, e, eOpts) {
        var refs = this.getReferences();
        refs.kullaniciKayitForm.getForm().reset();
    },

    onLookUpGridRowClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var lookUpDetailGrid = refs.lookUpDetailGrid;
        lookUpDetailGrid.setCollapsed(false);
        refs.lookUpDetailGrid.getStore().load({
            params:{
                lookUpId : record.data.LOOKUPID
            }
        });
    },

    onLookUpDetailGridRowClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var data = record.data;

        refs.txtLookUpDetailId.setValue(data.LOOKUPDETAILID);
        refs.txtLookUpDetailDesc.setValue(data.LOOKUPDETAILNAME);
        refs.txtLookUpDetailValue.setValue(data.LOOKUPDETAILVALUE);
        refs.cmbLookUpDetailStatus.setValue(data.LOOKUPDETAILSTATUS);
    },

    onSaveOrUpdateLookUpDetail: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var record = refs.lookUpGrid.getSelectionModel();
        if(!record.hasSelection()){
            Ext.Msg.alert('Uyarı', 'Lütfen önce lookUp Başlık seçiniz..');
        }else{
            Ext.Ajax.request({
                url:'/byzCorp/lookUp/saveOrUpdateLookUpDetail',
                params : {
                    data : Ext.encode(refs.saveOrUpdateLookUpDetailForm.getForm().getValues()),
                    lookUpId : record.getSelected().items[0].data.LOOKUPID
                },
                success : function(res){debugger;
                    var api = Ext.decode(res.responseText);
                    if(api.success){
                        refs.lookUpDetailGrid.getStore().load({
                            params:{
                                lookUpId : record.getSelected().items[0].data.LOOKUPID
                            }
                        });
                        refs.saveOrUpdateLookUpDetailForm.getForm().reset();
                        var t = new Ext.ToolTip({
                            anchor: 'top',
                            anchorToTarget: false,
                            targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                            title: 'Uyarı',
                            html: '0000-Kayıt işlemi başarılı.',
                            hideDelay: 200,
                            closable: false
                        });
                        t.show();
                    }else{
                        Ext.Msg.alert('Uyarı', 'Kayıt işlemi gerçekleşmedi.');
                    }
                }
            });
        }

    },

    lookUpDetailFormResetClick: function(button, e, eOpts) {
        var refs = this.getReferences();
        refs.kullaniciKayitForm.getForm().reset();
    },

    onDateStartInternShipReqSelect: function(field, value, eOpts) {
        debugger;
        var refs = this.getReferences();
        Ext.Ajax.request({
            url:'/byzCorp/lookUp/getLookUpDetail',
            params : {
                lookUpDetailId : 28//lud.parametreler.Bir dönem için belirlenen staj süresi
            },
            success : function(res){debugger;
                var api = Ext.decode(res.responseText);
                if(api.length>0){
                    refs.dateEndInternShipReq.setValue(api[0].LOOKUPDETAILVALUE);

                }
            }
        });
    },

    onSaveOrUpdateInternShipRequestFormClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var userId = refs.lblUserId.text;
        Ext.Ajax.request({
            url:'/byzCorp/internShip/saveOrUpdateInternShip',
            params : {
                requestData : Ext.encode(refs.saveOrUpdateRequest.getForm().getValues()),
                userId : userId
            },
            success : function(res){debugger;
                var api = Ext.decode(res.responseText);
                if(api.success){
                    refs.internShipRequestGrid.getStore().load();
                    refs.saveOrUpdateRequest.getForm().reset();
                    var t = new Ext.ToolTip({
                        anchor: 'top',
                        anchorToTarget: false,
                        targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                        title: 'Uyarı',
                        html: '0000-Kayıt işlemi başarılı.',
                        hideDelay: 200,
                        closable: false
                    });
                    t.show();
                }else{
                    Ext.Msg.alert(api.data.localizedMessage, api.data.SQLState);
                }
            }
        });
    },

    onFormInternShipFormResetClick1: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        refs.saveInternShipForm.getForm().reset();
        Ext.Ajax.request({
            url:'/byzCorp/lookUp/getLookUpDetail',
            params : {
                lookUpDetailId : 28//lud.parametreler.Bir dönem için belirlenen staj süresi
            },
            success : function(res){debugger;
                var api = Ext.decode(res.responseText);
                if(api.length>0){
                    refs.txtInternShipDay.setValue(api[0].LOOKUPDETAILVALUE);

                }
            }
        });
    },

    onDeleteInternShipClick1: function(button, e, eOpts) {

        debugger;
        var refs = this.getReferences();

        var record = refs.internShipsGrid.getSelectionModel();
        if(!record.hasSelection()){
            Ext.Msg.alert('Uyarı', 'Lütfen önce listeden öğrenci seçiniz..');
        }else{
            Ext.Ajax.request({
                url:'/byzCorp/internShip/getInternShipDetailsCount',
                params : {
                    internShipId : record.getSelected().items[0].data.INTERNSHIPID
                },
                success : function(res){debugger;
                    var api = Ext.decode(res.responseText);
                    if(api[0].TOTALINTERNSHIPDETAILCOMPDAY>0){

                        Ext.Msg.show({
                            title : 'Dikkat',
                            msg : 'Silmek istediğiniz kaydın detay kayıtları bulunmaktadır. Detay kayıtları ile birlikte kaydı silmek istedinize emin misiniz? ',
                            width : 450,
                            closable : false,
                            buttons : Ext.Msg.YESNO,
                            icon : Ext.Msg.QUESTION,
                            buttonText :
                            {
                                yes : 'Evet',
                                no : 'Hayır',
                                cancel : 'İptal'
                            },
                            multiline : false,
                            fn : function(buttonValue, inputText, showConfig){debugger;
                                if(buttonValue==='yes'){
                                    Ext.Ajax.request({
                                        url:'/byzCorp/internShip/deleteInternShip',
                                        params : {
                                            internShipId : record.getSelected().items[0].data.INTERNSHIPID
                                        },
                                        success : function(res){debugger;
                                            var api = Ext.decode(res.responseText);
                                            if(api.success){
                                                refs.internShipsGrid.getStore().load();
                                                refs.internShipDetailGrid.getStore().load();
                                                refs.saveInternShipForm.getForm().reset();
                                                var t = new Ext.ToolTip({
                                                    anchor: 'top',
                                                    anchorToTarget: false,
                                                    targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                                                    title: 'Uyarı',
                                                    html: '0000-Silme işlemi başarılı.',
                                                    hideDelay: 200,
                                                    closable: false
                                                });
                                                t.show();
                                            }else{
                                                Ext.Msg.alert('Uyarı', 'Silme işlemi gerçekleşmedi.');
                                            }
                                        }
                                    });

                                }else if(buttonValue==='no'){debugger;
                                    Ext.Msg.alert('Uyarı', 'Silme işleminiz iptal edildi.');
                                }else{
                                    Ext.Msg.alert('Uyarı', 'İşleminiz iptal edildi.');
                                }

                            }
                        });

                    }else{
                        Ext.Ajax.request({
                            url:'/byzCorp/internShip/deleteInternShip',
                            params : {
                                internShipId : record.getSelected().items[0].data.INTERNSHIPID
                            },
                            success : function(res){debugger;
                                var api = Ext.decode(res.responseText);
                                if(api.success){
                                    refs.internShipsGrid.getStore().load();
                                    refs.saveInternShipForm.getForm().reset();
                                    var t = new Ext.ToolTip({
                                        anchor: 'top',
                                        anchorToTarget: false,
                                        targetXY: [refs.maincontainer.getWidth(), refs.maincontainer.getHeight()],
                                        title: 'Uyarı',
                                        html: '0000-Silme işlemi başarılı.',
                                        hideDelay: 200,
                                        closable: false
                                    });
                                    t.show();
                                }else{
                                    Ext.Msg.alert('Uyarı', 'Silme işlemi gerçekleşmedi.');
                                }
                            }
                        });
                    }
                }
            });

        }
    },

    onLogOutClick: function(button, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var destroymainview = this.view;
        Ext.Msg.show({
            title : 'Dikkat',
            msg : 'İşleminizi seçiniz ',
            width : 300,
            closable : false,
            buttons : Ext.Msg.YESNO,
            icon : Ext.Msg.QUESTION,
            buttonText :
            {
                yes : 'Uygulamadan çık',
                no : 'Ekranı kilitle',
                cancel : 'İptal'
            },
            multiline : false,
            fn : function(buttonValue, inputText, showConfig){debugger;
                if(buttonValue==='yes'){
                    var loginview = Ext.create('widget.loginview');
                    loginview.show();
                    refs.maincontainer.destroy();
                }else if(buttonValue==='no'){debugger;
                    var lockview = Ext.create('widget.lockedview');
                    var lblGet = lockview.getReferences().lblUserLockInfo;
                    var lblUserIdGet = lockview.getReferences().lblUserIdLock;
                    var lblNewValue = refs.lblUserInfo.text;
                    var lblUserNameNewValue = refs.lblUserName.text;
                    lblGet.setText(lblNewValue);
                    lblUserIdGet.setText(lblUserNameNewValue);
                    lockview.show();
                    refs.maincontainer.destroy();
                }else{
                    Ext.Msg.alert('Uyarı', 'İşleminiz iptal edildi.');
                }

            }
        });
    },

    onTxtSearchKeyup: function(textfield, e, eOpts) {
        debugger;
        var refs = this.getReferences();
        var txtValue = textfield.value;
        refs.usersGrid.getStore().load({
            params:{
                txtValue : txtValue
            }
        });
        refs.lookUpGrid.getStore().load({
            params:{
                txtValue : txtValue
            }
        });
        refs.studentsGrid.getStore().load({
            params:{
                txtValue : txtValue
            }
        });
        refs.internShipsGrid.getStore().load({
            params:{
                txtValue : txtValue
            }
        });
    }

});
